apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    # NOTE: Using VMware Harbor registry for Bitnami charts
    # See: https://github.com/bitnami/charts
    repoURL: 'https://charts.bitnami.com/bitnami'
    targetRevision: {{ .Values.elasticsearch.targetRevision | quote }}
    chart: elasticsearch
    helm:
      values: |
        global:
          kibanaEnabled: {{ .Values.elasticsearch.kibanaEnabled }}
          {{- if .Values.openshift }}
          compatibility:
            openshift:
              adaptSecurityContext: enabled
          {{- end }}
        
        clusterName: elastic
        
        master:
          {{- if .Values.elasticsearch.resources }}
          resources:
{{ toYaml .Values.elasticsearch.resources | indent 12 }}
          {{- end }}
          networkPolicy:
            enabled: false
          
          ingress:
            enabled: true
            hostname: elasticsearch.{{ .Values.domain }}
            path: /
            {{- if .Values.ingressClassName }}
            ingressClassName: {{ .Values.ingressClassName | quote }}
            {{- end }}
          
          masterOnly: false
          replicaCount: {{ .Values.elasticsearch.replicaCount }}
          
          {{- if .Values.openshift }}
          serviceAccount:
            name: "default"
            create: false
          {{- end }}
          
          persistence:
            size: {{ .Values.size | quote }}
        
        data:
          replicaCount: 0
        
        coordinating:
          replicaCount: 0
        
        ingest:
          replicaCount: 0
        
        security:
          enabled: false
          elasticPassword: {{ .Values.elasticsearch.kibana.password | default "epics" | quote }}
          tls:
            autoGenerated: true
            enable: false
        
        kibana:
          ingress:
            enabled: true
            hostname: kibana.{{ .Values.domain }}
            path: /
            {{- if .Values.ingressClassName }}
            ingressClassName: {{ .Values.ingressClassName | quote }}
            {{- end }}
          
          {{- if .Values.openshift }}
          serviceAccount:
            name: "default"
            create: false
          {{- end }}
          
          networkPolicy:
            enabled: false
          
          elasticsearch:
            hosts:
              - elasticsearch.{{ .Values.namespace }}.svc.cluster.local
            security:
              auth:
                enabled: true
                kibanaUsername: {{ .Values.elasticsearch.kibana.username | default "epics" | quote }}
                kibanaPassword: {{ .Values.elasticsearch.kibana.password | default "epics" | quote }}
              tls:
                enabled: false
                existingSecret: elasticsearch-master-crt
                usePemCerts: true
        
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.namespace | quote }}
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  

