apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'registry-1.docker.io/bitnamicharts'  # Bitnami Helm repo
    targetRevision: '19.19.3'  
    chart: elasticsearch
    helm:
      values: |
        global:
          kibanaEnabled: true

        clusterName: elastic
        
        master:
          networkPolicy:
            enabled: false
          ingress:
            enabled: true
            hostname: elasticsearch.apps.okd-datest.lnf.infn.it
            path: /
          masterOnly: false
          replicaCount: 1
          serviceAccount:
            name: "default"
            create: false
          persistence:
            size: 32Gi
        data:
          replicaCount: 0
        coordinating:
          replicaCount: 0
        ingest:
          replicaCount: 0
        security:
          enabled: false
          # PASSWORD must be the same value passed to elasticsearch to get an "out of the box" experience
          elasticPassword: "epics"
          tls:
            # AutoGenerate TLS certs for elastic
            autoGenerated: true
            enable: false

        kibana:
          ingress:
            enabled: true
            hostname: kibana.apps.okd-datest.lnf.infn.it
            path: /
          serviceAccount:
            name: "default"
            create: false
          ##
          networkPolicy:
            enabled: false
          elasticsearch:
            host:
              - elasticsearch.backend.svc.cluster.local
            security:
              auth:
                enabled: false
                # default in the elasticsearch chart is elastic
                kibanaUsername: "epics"
                kibanaPassword: "epics"
              tls:
                # Instruct kibana to connect to elastic over https
                enabled: false
                # Bit of a catch 22, as you will need to know the name upfront of your release
                existingSecret: elasticsearch-master-crt # or elasticsearch-coordinating-crt' if the release name happens to be 'elasticsearch'
                # As the certs are auto-generated, they are pemCerts so set to true
                usePemCerts: true
        
        
        
          
          
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.namespace | quote }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      syncTimeout: 10m
  resource:
  customizations:
    timeout:
      seconds: 600

