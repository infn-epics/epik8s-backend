apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    # Using official Elastic Helm charts
    # See: https://github.com/elastic/helm-charts
    repoURL: 'https://helm.elastic.co'
    targetRevision: {{ .Values.elasticsearch.targetRevision | quote }}
    chart: elasticsearch
    helm:
      values: |
        # Elasticsearch cluster configuration
        clusterName: "elasticsearch"
        
        # Use Elasticsearch 8.15.3 image for Lucene 99 compatibility
        image: "docker.elastic.co/elasticsearch/elasticsearch"
        imageTag: "8.15.3"
        
        # Single-node deployment
        replicas: {{ .Values.elasticsearch.replicaCount }}
        minimumMasterNodes: 1
        
        # Disable TLS/SSL - use HTTP instead of HTTPS
        protocol: http
        
        # Explicitly create secrets to disable auto-generated TLS certs
        createCert: false
        secret:
          enabled: false
        
        # Set a dummy password to satisfy readiness probe
        # (not actually used since security is disabled)
        extraEnvs:
          - name: ELASTIC_PASSWORD
            value: "dummynotuser"
        
        # Disable security features completely
        esConfig:
          elasticsearch.yml: |
            xpack.security.enabled: false
            xpack.security.http.ssl.enabled: false
            xpack.security.transport.ssl.enabled: false
        
        # Resource limits
        {{- if .Values.elasticsearch.resources }}
        resources:
{{ toYaml .Values.elasticsearch.resources | indent 10 }}
        {{- end }}
        
        # Persistence
        volumeClaimTemplate:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: {{ .Values.size | quote }}
        
        # Service
        service:
          type: ClusterIP
          port: 9200
        
        # Ingress for Elasticsearch
        ingress:
          enabled: true
          {{- if .Values.ingressClassName }}
          className: {{ .Values.ingressClassName | quote }}
          {{- end }}
          hosts:
            - host: elasticsearch.{{ .Values.domain }}
              paths:
                - path: /
        
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.namespace | quote }}
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  
---
# Kibana Application
{{- if .Values.elasticsearch.kibanaEnabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kibana
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    # Using official Elastic Helm charts
    repoURL: 'https://helm.elastic.co'
    targetRevision: {{ .Values.elasticsearch.kibanaTargetRevision | default .Values.elasticsearch.targetRevision | quote }}
    chart: kibana
    helm:
      values: |
        # Kibana configuration
        elasticsearchHosts: "http://elasticsearch-master.{{ .Values.namespace }}.svc.cluster.local:9200"
        
        # Disable certificate verification since Elasticsearch has security disabled
        elasticsearchCertificateSecret: ""
        protocol: http
        
        # Resource limits
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        
        # Service
        service:
          type: ClusterIP
          port: 5601
        
        # Ingress for Kibana
        ingress:
          enabled: true
          {{- if .Values.ingressClassName }}
          className: {{ .Values.ingressClassName | quote }}
          {{- end }}
          hosts:
            - host: kibana.{{ .Values.domain }}
              paths:
                - path: /
  
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.namespace | quote }}
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
{{- end }}
  

