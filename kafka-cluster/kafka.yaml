apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ .Values.kafka.clusterName | default "epics-kafka" }}
  namespace: {{ .Values.namespace }}
spec:
  kafka:
    version: {{ .Values.kafka.version | default "3.8.0" }}
    replicas: {{ .Values.kafka.replicaCount | default 3 }}
    
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      {{- if .Values.kafka.externalAccess.enabled }}
      - name: external
        port: {{ .Values.kafka.externalAccess.port | default 9094 }}
        type: {{ .Values.kafka.externalAccess.type | default "loadbalancer" }}
        tls: false
        configuration:
          {{- if .Values.kafka.externalAccess.bootstrap }}
          bootstrap:
{{ toYaml .Values.kafka.externalAccess.bootstrap | indent 12 }}
          {{- end }}
          {{- if .Values.kafka.externalAccess.brokers }}
          brokers:
{{ toYaml .Values.kafka.externalAccess.brokers | indent 12 }}
          {{- end }}
      {{- end }}
    
    config:
      offsets.topic.replication.factor: {{ .Values.kafka.replicaCount | default 3 }}
      transaction.state.log.replication.factor: {{ min (.Values.kafka.replicaCount | default 3 | int) 3 }}
      transaction.state.log.min.isr: {{ min (sub (.Values.kafka.replicaCount | default 3 | int) 1) 2 }}
      default.replication.factor: {{ .Values.kafka.replicaCount | default 3 }}
      min.insync.replicas: {{ min (sub (.Values.kafka.replicaCount | default 3 | int) 1) 2 }}
      inter.broker.protocol.version: {{ .Values.kafka.version | default "3.8" | quote }}
      log.message.format.version: {{ .Values.kafka.version | default "3.8" | quote }}
      {{- if .Values.kafka.config }}
{{ toYaml .Values.kafka.config | indent 6 }}
      {{- end }}
    
    storage:
      type: {{ .Values.kafka.storage.type | default "persistent-claim" }}
      size: {{ .Values.kafka.storage.size | default "10Gi" }}
      deleteClaim: {{ .Values.kafka.storage.deleteClaim | default false }}
      {{- if .Values.kafka.storage.storageClass }}
      class: {{ .Values.kafka.storage.storageClass }}
      {{- end }}
    
    {{- if .Values.kafka.resources }}
    resources:
{{ toYaml .Values.kafka.resources | indent 6 }}
    {{- end }}
  
  zookeeper:
    replicas: {{ .Values.kafka.zookeeper.replicaCount | default 3 }}
    
    storage:
      type: {{ .Values.kafka.zookeeper.storage.type | default "persistent-claim" }}
      size: {{ .Values.kafka.zookeeper.storage.size | default "5Gi" }}
      deleteClaim: {{ .Values.kafka.zookeeper.storage.deleteClaim | default false }}
      {{- if .Values.kafka.zookeeper.storage.storageClass }}
      class: {{ .Values.kafka.zookeeper.storage.storageClass }}
      {{- end }}
    
    {{- if .Values.kafka.zookeeper.resources }}
    resources:
{{ toYaml .Values.kafka.zookeeper.resources | indent 6 }}
    {{- end }}
  
  {{- if .Values.kafka.entityOperator.enabled }}
  entityOperator:
    topicOperator:
      {{- if .Values.kafka.entityOperator.topicOperator.resources }}
      resources:
{{ toYaml .Values.kafka.entityOperator.topicOperator.resources | indent 8 }}
      {{- end }}
    
    userOperator:
      {{- if .Values.kafka.entityOperator.userOperator.resources }}
      resources:
{{ toYaml .Values.kafka.entityOperator.userOperator.resources | indent 8 }}
      {{- end }}
  {{- end }}
